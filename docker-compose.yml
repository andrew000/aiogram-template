services:
  bot:
    build:
      context: app/bot
      dockerfile: Dockerfile

    env_file: .env.docker

    networks:
      - aiogram_network

    user: bot

    stop_signal: SIGINT

    depends_on:
      - database
      - redis
    #      - caddy  # Uncomment if you want to use Caddy as a reverse proxy

    restart: always

    entrypoint: [ ".venv/bin/python", "main.py" ]

  migrations:
    # Do not run this container directly. Use `make` to run migrations.
    build:
      context: app/migrations
      dockerfile: Dockerfile

    env_file: .env.docker

    networks:
      - aiogram_network

    user: migrator

    stop_signal: SIGINT

    volumes:
      - ./app/migrations/versions:/app/versions
      - ./app/bot/settings.py:/app/settings.py:ro
      - ./app/bot/storages/psql:/app/storages/psql:ro

    depends_on:
      - database

    restart: always

  database:
    image: postgres:17.5

    environment:
      POSTGRES_USER: $PSQL_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
      POSTGRES_DB: $PSQL_DB

    secrets:
      - postgres-passwd

    networks:
      - aiogram_network

    ports:
      - "127.0.0.1:5432:5432"

    volumes:
      - ./psql/data:/var/lib/postgresql/data
      - ./psql/db-init-scripts:/docker-entrypoint-initdb.d:ro

    restart: always

  redis:
    image: redis:8.0.3

    command:
      - --port 6379
      - --protected-mode no
      - --loglevel notice
      - --requirepass $REDIS_PASSWORD
      - --maxmemory 256MB
      - --save 60 300
      - --dir /data
      - --dbfilename dump.rdb
      - --rdbcompression yes
      - --rdbchecksum yes
      - --always-show-logo yes

    networks:
      - aiogram_network

    ports:
      - "127.0.0.1:6379:6379"

    volumes:
      - ./redis/data:/data

    restart: always

    entrypoint: [ "redis-server" ]

  caddy:  # Uncomment if you want to use Caddy as a reverse proxy
    image: caddy:2.10.0

    networks:
      - aiogram_network

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
      - ./caddy/public:/usr/share/caddy/

    restart: always

networks:
  aiogram_network:

secrets:
  postgres-passwd:
    environment: PSQL_PASSWORD
